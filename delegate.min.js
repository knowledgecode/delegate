!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).delegate=t()}(this,(function(){"use strict";
/**
     * @preserve delegate (c) KNOWLEDGECODE | MIT
     */let e=[];const t=(e,t)=>{for(let s=0,r=e.length;s<r;s++)if(t(e[s]))return e[s]},s=(e,t)=>{for(let s=0,r=e.length;s<r;s++)t(e[s])},r=(e,t)=>{const r=[],n=[];return s(e,e=>t(e)?r.push(e):n.push(e)),[r,n]};class n{constructor(e,t){this.originalEvent=e,this.stop=!e.bubbles,this.abort=!1,this.currentTarget=t}preventDefault(){this.originalEvent.preventDefault()}stopPropagation(){this.stop=!0}stopImmediatePropagation(){this.abort=this.stop=!0}}class i{constructor(e){return this._baseEventTarget=e,this._eventCache={},this._subscribers={},this}listener(e){let t,s=this._subscribers[e.type]||[],i=e.target;if(s.length){for(;(i||{}).parentNode;){if([t,s]=r(s,(t=>s=>t.matches(s.selector)||!s.selector&&t===e.currentTarget)(i)),t.length){const r=new n(e,i);for(let e=0,s=t.length;e<s;e++)if(t[e].handler.call(i,r),r.abort)return;if(!s.length||r.stop)return}i=i.parentNode}if([t]=r(s,e=>!e.selector),t.length){i=e.currentTarget;const s=new n(e,i);for(let e=0,r=t.length;e<r;e++)if(t[e].handler.call(i,s),s.abort)return}}}on(e,s,r){"function"==typeof s&&(r=s,s=null);const n=this._subscribers[e]=this._subscribers[e]||[];if(!t(n,e=>e.selector===s&&e.handler===r)&&(n.push({selector:s,handler:r}),!this._eventCache[e])){const t=this.listener.bind(this);this._eventCache[e]=t,this._baseEventTarget.addEventListener(e,t,!0)}return this}off(e,t,s){return"function"==typeof t&&(s=t,t=null),e?t||s?(this._subscribers[e]=(this._subscribers[e]||[]).filter(e=>e.selector===t&&(!s||e.handler===s)),this._subscribers[e].length||delete this._subscribers[e]):delete this._subscribers[e]:this._subscribers={},this}one(e,t,s){const r=this,n=function(i){r.off(e,t||n,n),s.call(this,i)};return"function"==typeof t?(s=t,t=null,this.on(e,n)):this.on(e,t,n)}clear(){this.off(),s(Object.keys(this._eventCache),e=>{this._baseEventTarget.removeEventListener(e,this._eventCache[e],!0)}),this._eventCache={},e=e.filter(e=>this._baseEventTarget!==e.baseEventTarget)}}return s=>{if(!s instanceof EventTarget)throw new TypeError(s+" is not an EventTarget");return(t(e,e=>s===e.baseEventTarget)||(e.push({baseEventTarget:s,delegator:new i(s)}),e.slice(-1)[0])).delegator}}));
